(defcfg
  danger-enable-cmd yes       ;; enable kanata to execute commands
  delegate-to-first-layer no  ;; transparent keys(_) on layers will delegate to the first-layer instead of the defsrc
  process-unmapped-keys no    ;; enable processing of keys that are not in defsrc.
  block-unmapped-keys no      ;; disable all keys not mapped in defsrc.(process-unmapped-keys must be enabled)
  rapid-event-delay 5         ;; adds a certain delay in milliseconds to have kanata processor output keys in correct order
  concurrent-tap-hold yes     ;; have multiple tap-hold actions run concurrently, i.e. have next tap-hold start its timeout before expiry of the previous
  log-layer-changes yes       ;; logging has some processing overhead. Doesn't log only layer changes.
)

(deftemplate shift-fork (key when_shifted_key)
  (fork $key (multi (release-key sft) $when_shifted_key) (lsft rsft))
)

;; Aliases for keys accessible only via shifting
(defalias
  til S-grv exc S-1 ats S-2 oct S-3 dol S-4 per S-5 car S-6 amp S-7 ast S-8 pao S-9 pac S-0 und S-min plu S-eql
  btb S-tab                                                                                   cuo S-[ cuc S-] pip S-\
                                                                        ano S-comm anc S-. que S-/
)

;; Aliases for keys that are certainly to be unshifted
(defalias
  btk (unshift grv) one (unshift 1) two (unshift 2) thr (unshift 3) fou (unshift 4) fiv (unshift 5) six (unshift 6) sev (unshift 7) eig (unshift 8) nin (unshift 9) zer (unshift 0) hpn (unshift min) equ (unshift eql)
                                                                                         sbo (unshift [) sbc (unshift ]) bsl (unshift \)
                                                                                         com (unshift comm) dot (unshift .) fsl (unshift /)
)

;; the reduced ANSI QWERTY 60% layout (39-key layout)
(defsrc
  tab    q    w    e    r    t         u    i    o    p   [     ]    ;; 12 keys
  caps   a    s    d    f    g         j    k    l    ;    '    ret  ;; 12 keys
  lsft   z    x    c    v    b         n    m    ,    .    /    rsft ;; 12 keys
              lalt lmet          spc          rmet ralt              ;; 3  keys (2 redundant keys for interoperability b/w diff. keyboards & OS)
)

;; TLTR Activation

;; implementation 1
#|
(defchords tl_tr 500
  (tl  ) (layer-while-held TL)
  (  tr) (layer-while-held TR)
  (tl tr) (layer-while-held TLTR)
)
(defalias
  tl (chord tl_tr tl)
  tr (chord tl_tr tr)
)
|#

;;implementation 2
#|
(defalias
  tl (multi nop3 (switch
    (nop4) (layer-while-held TLTR) break
    () (multi (release-layer TLTR) (layer-while-held TL)) break
  ))
  tr (multi nop4 (switch
    (nop3) (layer-while-held TLTR) break
    () (multi (release-layer TLTR) (layer-while-held TR)) break
  ))
)
|#

;; implementation 3
(defvirtualkeys
  release_layer_TLTR (release-layer TLTR)
)

(defalias
  tl     (multi (layer-while-held TL)                         (on-release press-vkey release_layer_TLTR))
  tltltr (multi (layer-while-held TL) (layer-while-held TLTR) (on-release press-vkey release_layer_TLTR))
  tr     (multi (layer-while-held TR)                         (on-release press-vkey release_layer_TLTR))
  trtltr (multi (layer-while-held TR) (layer-while-held TLTR) (on-release press-vkey release_layer_TLTR))
)

(defalias
  delf (template-expand shift-fork bspc del)
  slaf (template-expand shift-fork @fsl @bsl)
  comf (template-expand shift-fork @com @und)
  dotf (template-expand shift-fork @dot @que)
)

#|
 Custom Colemak with,
 1. curl mod (mod dh)
 2. wide mod (shifting right hand keys to the right by one key)
 3. angle mod (placement of z in the middle)
|#
(deflayer CUSTOM_COLEMAK
  _     q w f p b        j     l u y     '     ;
  @delf a r s t g        m     n e i     o     _
  _     x c d v z        @slaf k h @comf @dotf _
      @tl @tl       _       @tr @tr
)

(defvar
  os_timeout 300
)

(defalias
  ;; sticky modifiers
  sPnk (one-shot-release $os_timeout lalt)
  sMid (one-shot-release $os_timeout lsft)
  sFn (one-shot-release $os_timeout nop2)

  sWin (multi
    (one-shot-release $os_timeout lmet)
    (one-shot-release $os_timeout lctl)
    (one-shot-release $os_timeout lalt)
  ) ;; window manager key (meant for window manipulation)

  sHyp (multi
    (one-shot-release $os_timeout lmet)
    (one-shot-release $os_timeout lctl)
    (one-shot-release $os_timeout lalt)
    (one-shot-release $os_timeout lsft)
  ) ;; hyper key (meant for application shortcuts)

  cw (caps-word-custom 3000
    (a b c d e f g h i j k l m n o p q r s t u v w x y z)
    (1 2 3 4 5 6 7 8 9 0 left down up rght bspc del - rsft lsft)
  )

  pguf (template-expand shift-fork pgup home)
  pgdf (template-expand shift-fork pgdn end)
)

(defvirtualkeys
  ctrl_key lctl
  meta_key lmet
)

(defvar
  td_timeout 150
)

(platform (macos)
  (defalias
    sPnt (tap-dance $td_timeout (
        (one-shot-release $os_timeout lmet)
        (on-press toggle-vkey meta_key)
      )
    )
    sRng (tap-dance $td_timeout (
        (one-shot-release $os_timeout lctl)
        (on-press toggle-vkey ctrl_key)
      )
    )
  )
)
(platform (win winiov2 wintercept linux)
  (defalias
    sPnt (one-shot-release $os_timeout lmet)
    sRng (tap-dance $td_timeout (
        (one-shot-release $os_timeout lctl)
        (on-press toggle-vkey ctrl_key)
      )
    )
  )
)

;; TL (Thumb Left) layer for modifiers & navigation
(deflayer TL
  _ esc   @sWin @sFn  XX    XX      @pguf  @btb up   tab  rpt XX
  _ @sPnk @sRng @sMid @sPnt XX      @pgdf  left down rght @cw _
  _ XX    XX    @sHyp XX    XX      XX     XX   bspc del  XX  _
              XX  XX             _          @trtltr @trtltr
)

;; TODO:
;; shift-fork
;; tap-dance
;; better naming using fancy symbols or unicode as aliases

(defalias
  ;; symbols' forks
  ampf (template-expand shift-fork @amp @til)
  pipf (template-expand shift-fork @pip @btk)
  dolf (fork @dol (unicode â‚¹) (lsft rsft))

  ;; brackets' forks
  curf (template-expand shift-fork @cuo @cuc)
  parf (template-expand shift-fork @pao @pac)
  sqrf (template-expand shift-fork @sbo @sbc)

  ;; funciton keys' fn-forks
  1f   (fork @one f1  (nop2))
  2f   (fork @two f2  (nop2))
  3f   (fork @thr f3  (nop2))
  4f   (fork @fou f4  (nop2))
  5f   (fork @fiv f5  (nop2))
  6f   (fork @six f6  (nop2))
  7f   (fork @sev f7  (nop2))
  8f   (fork @eig f8  (nop2))
  9f   (fork @nin f9  (nop2))
  0f   (fork @zer f10 (nop2))
  astf (fork @ast f11 (nop2))
  perf (fork @per f12 (nop2))
)

;; TR (Thumb Right) layer
;; for symbols & numbers
(deflayer TR
  _     @exc  @ats  @oct  @dolf @car      @perf  @7f   @8f   @9f   @plu  @equ
  @delf @ampf @pipf @curf @parf @sqrf     @astf  @4f   @5f   @6f   @hpn  _
  _     XX    @ano  @anc  XX    XX        @slaf  @0f   @1f   @2f   @3f   _
           @tltltr @tltltr             _             XX XX
)

;; media & screen control
(platform (macos)
  (defalias
    ss (cmd /usr/bin/open -a ScreenSaverEngine)
    zz (cmd /usr/bin/pmset sleepnow)
    bri brup
    brd brdown
  )
)
(platform (linux)
  (defalias
    ss (cmd /usr/bin/xscreensaver-command -activate)
    zz (cmd /usr/bin/xset dpms force off)
    bri brup
    brd brdown
  )
)
(platform (win winiov2 wintercept)
  (defalias
    ss (cmd powershell.exe -NoProfile -Command nircmd screensaver)
    zz (cmd powershell.exe -NoProfile -Command nircmd standby)
    bri (cmd powershell.exe -NoProfile -Command nircmd changebrightness +20)
    brd (cmd powershell.exe -NoProfile -Command nircmd changebrightness -20)
  )
)
(defalias
  scref (template-expand shift-fork @ss @zz)
  voldf (template-expand shift-fork vold mute)
  medif (template-expand shift-fork next prev)
)

;; mouse
(defvar
  ;; in pixels
  mouse_move 25
  slow_mouse_move 15
  scroll_move 75
  slow_scroll_move 25
  ;; in milliseconds
  repeat_delay 25
)
(defalias
  slw nop0
  scr nop1

  mu (switch
    ((and nop0 nop1)) (mwheel-up $repeat_delay $slow_mouse_move) break
    (nop1) (mwheel-up $repeat_delay $scroll_move) break
    (nop0) (movemouse-up $repeat_delay $slow_mouse_move) break
    () (movemouse-up $repeat_delay $mouse_move) break
  )
  md (switch
    ((and nop0 nop1)) (mwheel-down $repeat_delay $slow_scroll_move) break
    (nop1) (mwheel-down $repeat_delay $scroll_move) break
    (nop0) (movemouse-down $repeat_delay $slow_mouse_move) break
    () (movemouse-down $repeat_delay $mouse_move) break
  )
  mr (switch
    ((and nop0 nop1)) (mwheel-right $repeat_delay $slow_mouse_move) break
    (nop1) (mwheel-right $repeat_delay $scroll_move) break
    (nop0) (movemouse-right $repeat_delay $slow_mouse_move) break
    () (movemouse-right $repeat_delay $mouse_move) break
  )
  ml (switch
    ((and nop0 nop1)) (mwheel-left $repeat_delay $slow_scroll_move) break
    (nop1) (mwheel-left $repeat_delay $scroll_move) break
    (nop0) (movemouse-left $repeat_delay $slow_mouse_move) break
    () (movemouse-left $repeat_delay $mouse_move) break
  )
)

;; default switching
(defvirtualkeys on_qwerty_layer (layer-while-held QWERTY))
(defalias def (on-press press-vkey on_qwerty_layer))

;; TLTR (Thumb Left & Thumb Right) layer
;; for non-keyboard functions like mouse, media, etc.
(deflayer TLTR
  XX @scref @bri   pp     volu XX            XX XX  @mu XX  XX XX
  XX @slw   XX     @scr   mlft mrgt          XX @ml @md @mr XX lrld
  _  @brd   @medif @voldf XX   XX            XX XX  XX  XX  XX _
               XX XX                 @def          XX XX
)

(defalias
  ndef (switch
    ((and lmet rmet)) (on-press release-vkey on_qwerty_layer) break
    ((and lalt ralt)) (on-press release-vkey on_qwerty_layer) break
    () spc break
  )
)

;;ANSI QWERTY layer
(deflayer QWERTY
  tab  q w e r t         u i o p [ ]
  caps a s d f g         j k l ; ' ret
  _    z x c v b         n m , . / _
      lalt lmet   @ndef   rmet ralt
)
